#lang racket
(define (cbrt-iter guess x)
  (if (good-enough? guess x)
      guess
      (cbrt-iter (improve guess x)
                 x)))
(define (improve guess x)
  (func1 x guess))
(define (func1 x y)
  (/ (+ (/ x
           (* y y))
        (* 2 y))
     3))
(define (good-enough? guess x)
  (< (guess-rate-of-change guess x)
     .005))
(define (cbrt x)
  (cbrt-iter 1.0 x))
(define (cube x)
  (* x x x))
(define (guess-rate-of-change guess x)
   (/ (abs (- (improve guess x)
              guess))
      guess))